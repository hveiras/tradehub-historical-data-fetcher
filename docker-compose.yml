version: '3.8'

services:
  # TimescaleDB database
  timescaledb:
    image: timescale/timescaledb:latest-pg14
    container_name: historical-data-timescaledb
    environment:
      POSTGRES_DB: my_timescale_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: mysecretpassword
    ports:
      - "5432:5432"
    volumes:
      - timescale_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - historical-data-network

  # Historical Data Fetcher API
  historical-data-api:
    build: .
    container_name: historical-data-api
    command: python api.py
    environment:
      DB_HOST: timescaledb
      DB_NAME: my_timescale_db
      DB_USER: postgres
      DB_PASSWORD: mysecretpassword
      BINANCE_API_KEY: ${BINANCE_API_KEY:-your_api_key}
      BINANCE_API_SECRET: ${BINANCE_API_SECRET:-your_api_secret}
      LOG_LEVEL: INFO
      PYTHONUNBUFFERED: 1
    ports:
      - "5000:5000"
    volumes:
      - ./data:/app/data  # Cache directory
    depends_on:
      - timescaledb
    networks:
      - historical-data-network
    restart: unless-stopped

  # DEPRECATED: Historical Data Fetcher CLI
  # This service is kept for backward compatibility but will show a message
  # directing users to use the API instead. The service is now API-only.
  historical-data-cli:
    build: .
    container_name: historical-data-cli
    command: python app.py  # Will show API-only message
    environment:
      DB_HOST: timescaledb
      DB_NAME: my_timescale_db
      DB_USER: postgres
      DB_PASSWORD: mysecretpassword
      BINANCE_API_KEY: ${BINANCE_API_KEY:-your_api_key}
      BINANCE_API_SECRET: ${BINANCE_API_SECRET:-your_api_secret}
      LOG_LEVEL: INFO
      PYTHONUNBUFFERED: 1
    volumes:
      - ./data:/app/data  # Cache directory
    depends_on:
      - timescaledb
    networks:
      - historical-data-network
    profiles:
      - cli  # Only start when explicitly requested

volumes:
  timescale_data:

networks:
  historical-data-network:
    driver: bridge
